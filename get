#!/bin/bash
cd "$(dirname "$0")"
common/libc.sh
source common/libc.sh

cntr_category=1
declare -a categories
declare -A requirements

categories[cntr_category]="ubuntu"
requirements["ubuntu"]="requirements_debian"
cntr_category=$((cntr_category + 1))
ubuntu() {
  get_all_debian ubuntu-eglibc http://archive.ubuntu.com/ubuntu/pool/main/e/eglibc/ libc6
  get_all_debian ubuntu-glibc http://archive.ubuntu.com/ubuntu/pool/main/g/glibc/ libc6
  get_all_debian ubuntu-musl http://archive.ubuntu.com/ubuntu/pool/universe/m/musl/ musl
  get_all_debian ubuntu-dietlibc http://archive.ubuntu.com/ubuntu/pool/universe/d/dietlibc/ dietlibc
  get_all_debian ubuntu-security-eglibc http://security.ubuntu.com/ubuntu/pool/main/e/eglibc/ libc6
  get_all_debian ubuntu-security-glibc http://security.ubuntu.com/ubuntu/pool/main/g/glibc/ libc6
  get_all_debian ubuntu-security-musl http://security.ubuntu.com/ubuntu/pool/universe/m/musl/ musl
  get_all_debian ubuntu-security-dietlibc http://security.ubuntu.com/ubuntu/pool/universe/d/dietlibc/ dietlibc
  get_all_debian ubuntu-old-eglibc http://old-releases.ubuntu.com/ubuntu/pool/main/e/eglibc/ libc6
  get_all_debian ubuntu-old-glibc http://old-releases.ubuntu.com/ubuntu/pool/main/g/glibc/ libc6
  get_all_debian ubuntu-old-musl http://old-releases.ubuntu.com/ubuntu/pool/universe/m/musl/ musl
  get_all_debian ubuntu-old-dietlibc http://old-releases.ubuntu.com/ubuntu/pool/universe/d/dietlibc/ dietlibc
}

categories[cntr_category]="ubuntu_static_amd64"
requirements["ubuntu_static_amd64"]="requirements_debian"
cntr_category=$((cntr_category + 1))
ubuntu_static_amd64() {
  get_all_debian_amd64 ubuntu-eglibc http://archive.ubuntu.com/ubuntu/pool/main/e/eglibc/ libc6-dev static
  get_all_debian_amd64 ubuntu-glibc http://archive.ubuntu.com/ubuntu/pool/main/g/glibc/ libc6-dev static
  get_all_debian_amd64 ubuntu-musl http://archive.ubuntu.com/ubuntu/pool/universe/m/musl/ musl-dev static
  get_all_debian_amd64 ubuntu-security-eglibc http://security.ubuntu.com/ubuntu/pool/main/e/eglibc/ libc6-dev static
  get_all_debian_amd64 ubuntu-security-glibc http://security.ubuntu.com/ubuntu/pool/main/g/glibc/ libc6-dev static
  get_all_debian_amd64 ubuntu-security-musl http://security.ubuntu.com/ubuntu/pool/universe/m/musl/ musl-dev static
  get_all_debian_amd64 ubuntu-old-eglibc http://old-releases.ubuntu.com/ubuntu/pool/main/e/eglibc/ libc6-dev static
  get_all_debian_amd64 ubuntu-old-glibc http://old-releases.ubuntu.com/ubuntu/pool/main/g/glibc/ libc6-dev static
  get_all_debian_amd64 ubuntu-old-musl http://old-releases.ubuntu.com/ubuntu/pool/universe/m/musl/ musl-dev static
}

categories[cntr_category]="ubuntu_static_i386"
requirements["ubuntu_static_i386"]="requirements_debian"
cntr_category=$((cntr_category + 1))
ubuntu_static_i386() {
  get_all_debian_i386 ubuntu-eglibc http://archive.ubuntu.com/ubuntu/pool/main/e/eglibc/ libc6-dev static
  get_all_debian_i386 ubuntu-glibc http://archive.ubuntu.com/ubuntu/pool/main/g/glibc/ libc6-dev static
  get_all_debian_i386 ubuntu-musl http://archive.ubuntu.com/ubuntu/pool/universe/m/musl/ musl-dev static
  get_all_debian_i386 ubuntu-security-eglibc http://security.ubuntu.com/ubuntu/pool/main/e/eglibc/ libc6-dev static
  get_all_debian_i386 ubuntu-security-glibc http://security.ubuntu.com/ubuntu/pool/main/g/glibc/ libc6-dev static
  get_all_debian_i386 ubuntu-security-musl http://security.ubuntu.com/ubuntu/pool/universe/m/musl/ musl-dev static
  get_all_debian_i386 ubuntu-old-eglibc http://old-releases.ubuntu.com/ubuntu/pool/main/e/eglibc/ libc6-dev static
  get_all_debian_i386 ubuntu-old-glibc http://old-releases.ubuntu.com/ubuntu/pool/main/g/glibc/ libc6-dev static
  get_all_debian_i386 ubuntu-old-musl http://old-releases.ubuntu.com/ubuntu/pool/universe/m/musl/ musl-dev static
}


categories[cntr_category]="debian"
requirements["debian"]="requirements_debian"
cntr_category=$((cntr_category + 1))
debian() {
  get_all_debian debian-glibc https://deb.debian.org/debian/pool/main/g/glibc/ libc6
  get_all_debian debian-musl https://deb.debian.org/debian/pool/main/m/musl/ musl
  get_all_debian debian-dietlibc https://deb.debian.org/debian/pool/main/d/dietlibc/ dietlibc
}

categories[cntr_category]="debian_static_amd64"
requirements["debian_static_amd64"]="requirements_debian"
cntr_category=$((cntr_category + 1))
debian_static_amd64() {
  get_all_debian_amd64 debian-glibc https://deb.debian.org/debian/pool/main/g/glibc/ libc6-dev static
  get_all_debian_amd64 debian-musl https://deb.debian.org/debian/pool/main/m/musl/ musl-dev static
  get_all_debian_amd64 debian-dietlibc https://deb.debian.org/debian/pool/main/d/dietlibc/ dietlibc-dev static
}

categories[cntr_category]="debian_static_i386"
requirements["debian_static_i386"]="requirements_debian"
cntr_category=$((cntr_category + 1))
debian_static_i386() {
  get_all_debian_i386 debian-glibc https://deb.debian.org/debian/pool/main/g/glibc/ libc6-dev static
  get_all_debian_i386 debian-musl https://deb.debian.org/debian/pool/main/m/musl/ musl-dev static
  get_all_debian_i386 debian-dietlibc https://deb.debian.org/debian/pool/main/d/dietlibc/ dietlibc-dev static
}

categories[cntr_category]="rpm"
requirements["rpm"]="requirements_rpm"
cntr_category=$((cntr_category + 1))
rpm() {
  get_all_rpm rpm glibc libc x86_64
  get_all_rpm rpm glibc libc i586
  get_all_rpm rpm glibc libc i686
  get_all_rpm rpm musl musl x86_64
  get_all_rpm rpm musl musl i586
  get_all_rpm rpm musl musl i686
}

categories[cntr_category]="rpm_static"
requirements["rpm_static"]="requirements_rpm"
cntr_category=$((cntr_category + 1))
rpm_static() {
  get_all_rpm rpm glibc-devel libc-devel x86_64 static
  get_all_rpm rpm glibc-devel libc-devel i586 static
  get_all_rpm rpm glibc-devel libc-devel i686 static
  get_all_rpm rpm musl-devel musl-devel x86_64 static
  get_all_rpm rpm musl-devel musl-devel i586 static
  get_all_rpm rpm musl-devel musl-devel i686 static
}


categories[cntr_category]="centos"
requirements["centos"]="requirements_centos"
cntr_category=$((cntr_category + 1))
centos() {
  get_from_filelistgz centos-glibc http://mirror.centos.org/centos/ glibc i686
  get_from_filelistgz centos-glibc http://mirror.centos.org/centos/ glibc x86_64
}


categories[cntr_category]="centos_static"
requirements["centos_static"]="requirements_centos"
cntr_category=$((cntr_category + 1))
centos_static() {
  get_from_filelistgz centos-glibc http://mirror.centos.org/centos/ glibc-devel i686 static
  get_from_filelistgz centos-glibc http://mirror.centos.org/centos/ glibc-devel x86_64 static
}

categories[cntr_category]="arch"
requirements["arch"]="requirements_pkg"
cntr_category=$((cntr_category + 1))
arch() {
  get_all_pkg arch-glibc https://archive.archlinux.org/packages/g/glibc/ libc
  get_all_pkg arch-lib32-glibc https://archive.archlinux.org/packages/l/lib32-glibc/ libc
  get_all_pkg arch-musl https://archive.archlinux.org/packages/m/musl/ musl
}

categories[cntr_category]="alpine"
requirements["alpine"]="requirements_apk"
cntr_category=$((cntr_category + 1))
alpine() {
  alpine_versions=(
      latest-stable
      edge
      v3.0
      v3.1
      v3.2
      v3.3
      v3.4
      v3.5
      v3.6
      v3.7
      v3.8
      v3.9
      v3.10
      v3.11
      v3.12
  )

  for version in "${alpine_versions[@]}"; do
    get_all_apk alpine-musl http://dl-cdn.alpinelinux.org/alpine/ "$version" main x86_64 musl
    get_all_apk alpine-musl http://dl-cdn.alpinelinux.org/alpine/ "$version" main x86 musl
  done
}

categories[cntr_category]="alpine_static"
requirements["alpine_static"]="requirements_apk"
cntr_category=$((cntr_category + 1))
alpine_static() {
  alpine_versions=(
      latest-stable
      edge
      v3.0
      v3.1
      v3.2
      v3.3
      v3.4
      v3.5
      v3.6
      v3.7
      v3.8
      v3.9
      v3.10
      v3.11
      v3.12
  )

  for version in "${alpine_versions[@]}"; do
    get_all_apk alpine-musl http://dl-cdn.alpinelinux.org/alpine/ "$version" main x86_64 musl-dev static
    get_all_apk alpine-musl http://dl-cdn.alpinelinux.org/alpine/ "$version" main x86 musl-dev static
  done
}

categories[cntr_category]="kali"
requirements["kali"]="requirements_debian"
cntr_category=$((cntr_category + 1))
kali() {
  get_all_debian kali-glibc https://http.kali.org/pool/main/g/glibc/ libc6
  get_all_debian kali-musl https://http.kali.org/pool/main/m/musl/ musl
}

categories[cntr_category]="kali_static_amd64"
requirements["kali_static_amd64"]="requirements_debian"
cntr_category=$((cntr_category + 1))
kali_static_amd64() {
  get_all_debian_amd64 kali-glibc https://http.kali.org/pool/main/g/glibc/ libc6-dev static
  get_all_debian_amd64 kali-musl https://http.kali.org/pool/main/m/musl/ musl-dev static
}

categories[cntr_category]="kali_static_i386"
requirements["kali_static_i386"]="requirements_debian"
cntr_category=$((cntr_category + 1))
kali_static_i386() {
  get_all_debian_i386 kali-glibc https://http.kali.org/pool/main/g/glibc/ libc6-dev static
  get_all_debian_i386 kali-musl https://http.kali.org/pool/main/m/musl/ musl-dev static
}

categories[cntr_category]="parrotsec"
requirements["parrotsec"]="requirements_debian"
cntr_category=$((cntr_category + 1))
parrotsec() {
  get_all_debian parrotsec-glibc https://download.parrot.sh/parrot/pool/main/g/glibc/ libc6
  get_all_debian parrotsec-musl https://download.parrot.sh/parrot/pool/main/m/musl/ musl
}
categories[cntr_category]="launchpad"
requirements["launchpad"]="requirements_launchpad"
cntr_category=$((cntr_category + 1))
launchpad() {
  get_all_launchpad launchpad-ubuntu-glibc ubuntu libc6 amd64
  get_all_launchpad launchpad-ubuntu-glibc ubuntu libc6 i386
}

categories[cntr_category]="launchpad_static_amd64"
requirements["launchpad_static_amd64"]="requirements_launchpad"
cntr_category=$((cntr_category + 1))
launchpad_static_amd64() {
  get_all_launchpad_amd64 launchpad-ubuntu-glibc ubuntu libc6-dev amd64 static
  get_all_launchpad_amd64 launchpad-ubuntu-glibc ubuntu libc6-dev i386 static
}

categories[cntr_category]="launchpad_static_i386"
requirements["launchpad_static_i386"]="requirements_launchpad"
cntr_category=$((cntr_category + 1))
launchpad_static_i386() {
  get_all_launchpad_i386 launchpad-ubuntu-glibc ubuntu libc6-dev amd64 static
  get_all_launchpad_i386 launchpad-ubuntu-glibc ubuntu libc6-dev i386 static
}

help() {
  exec 1>&2
  echo "Please specify libc categories to download:"
  for category in "${categories[@]}" ; do
    echo -e "\t* $category"
  done
  echo ""
  echo "You may also specify 'all' to download all categories available."
  echo ""
  echo "Example:"
  echo ""
  echo "$ ./get ubuntu rpm arch"
  echo "$ ./get all"
  exit 1
}

if [[ "$#" -eq 0 ]] ; then
  help
fi
if [[ " $@ " == *" all "* ]] ; then
  set -- "${categories[@]}"
fi

# Verify arguments, requirements, and display a recap
requirements_general || die "General requirements are not met. Please, refer to README.md for installation instructions"
echo "Will download or update for:"
for category in "$@" ; do
  if [[ ! " ${categories[@]} " == *" ${category} "* ]] ; then
    die "Invalid category '$category'"
  fi
  ${requirements[$category]} || die "Requirements for download or update '$category' are not met. Please, refer to README.md for installation instructions"
  echo -e "\t* $category ; Requirements are met"
done


# Let's start :)
for category in "$@" ; do
  echo "Downloading/updating $category"
  $category
done
